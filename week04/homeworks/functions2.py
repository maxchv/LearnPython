## Домашнее задание №8 по курсу "Программирование на Python"

def sum_prod(*args):
	"""
	Реализуйте функцию, которая принимает переменное количество позиционных параметров
	и возвращает (в виде кортежа) суму и произведение целочисленных аргументов.
	
	>>> sum_prod(1, 2, 3)
	(6, 6)
	>>> sum_prod(5, 6, 1)
	(12, 30)
	>>> sum_prod(100, 50, 10)
	(160, 50000)
	"""
	pass


def frenheitToCelsius(f):
	"""
	Релизуйте функцию конвертирования градусов по Фаренгейту в градусы по Цельсию
	
	Для конвертирования применяется формула:
	                 5
	   t(Цельсия) = --- (t(Фаренгейту) - 32)
	                 9
	Подробности на wikipedia:
	https://ru.wikipedia.org/wiki/%D0%93%D1%80%D0%B0%D0%B4%D1%83%D1%81_%D0%A4%D0%B0%D1%80%D0%B5%D0%BD%D0%B3%D0%B5%D0%B9%D1%82%D0%B0
	
	>>> frenheitToCelsius( 38 )
	3.3333333333333335
	>>> frenheitToCelsius( 55 )
 	2.777777777777779
	>>> frenheitToCelsius( 81 )
	27.222222222222225
	>>> frenheitToCelsius( 114 )
	45.55555555555556
	>>> frenheitToCelsius( 102 )
	38.88888888888889
	"""
	pass

def phib(n):
	"""
	Напишите функцию, которая по данному целому неотрицательному n 
	печатает n-e число Фибоначчи. 
	В этой задаче можно использовать циклы.
	
	Числа Фибоначчи — линейная рекуррентная последовательность натуральных чисел, 
	где первое и второе равно единице, а каждое последующее — сумме двух предыдущих: 
	1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377
	Подробнее: http://cyclowiki.org/wiki/%D0%A7%D0%B8%D1%81%D0%BB%D0%B0_%D0%A4%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8
	
	>>> phib(1)
	1
	>>> phib(2)
	1, 1
	>>> phib(3)
	1, 1, 2
	>>> phib(4)
	1, 1, 2, 3
	>>> phib(5)
	1, 1, 2, 3, 5
	>>> phib(6)
	1, 1, 2, 3, 5, 8
	"""
	pass
	
def is_global(name):
    """
    Напишите функцию, которая проверяет переменная с именем name глобальной переменной
	
	Параметр name - строковое имя переменной
	
	Возвращает True если переменная name находится в глобальном контексте, иначе - возвращает False
	
    >>> is_global('test')
    False
    >>> a = 10
    >>> is_global('a')
    True
    """
    pass

def main():
    import doctest
    doctest.testmod()

if __name__ == "__main__":
    main()
